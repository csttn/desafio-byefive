{"ast":null,"code":"var _jsxFileName = \"/home/cs/Projects/byefive/frontend/src/components/hooks/useTransactions.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { api } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionProvider({\n  children\n}) {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get(\"/transactions\").then(({\n      data\n    }) => setTransactions(data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post(\"/transactions\", { ...transactionInput,\n      createdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionProvider;\nexport function useTransactions() {\n  _s2();\n\n  const context = useContext(TransactionsContext);\n  return context;\n}\n\n_s2(useTransactions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"sources":["/home/cs/Projects/byefive/frontend/src/components/hooks/useTransactions.tsx"],"names":["React","createContext","useContext","useEffect","useState","api","TransactionsContext","TransactionProvider","children","transactions","setTransactions","get","then","data","createTransaction","transactionInput","response","post","createdAt","Date","transaction","useTransactions","context"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,aADF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,GAAT,QAAoB,oBAApB;;AA2BA,MAAMC,mBAAmB,gBAAGL,aAAa,CACvC,EADuC,CAAzC;AAIA,OAAO,SAASM,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAAsE;AAAA;;AAC3E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAyB,EAAzB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CACAM,GADH,CACO,eADP,EAEGC,IAFH,CAEQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcH,eAAe,CAACG,IAAI,CAACJ,YAAN,CAFrC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeK,iBAAf,CAAiCC,gBAAjC,EAAqE;AACnE,UAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0B,EAC/C,GAAGF,gBAD4C;AAE/CG,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAFoC,KAA1B,CAAvB;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAkBJ,QAAQ,CAACH,IAAjC;AAEAH,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBW,WAAlB,CAAD,CAAf;AACD;;AAED,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEX,MAAAA,YAAF;AAAgBK,MAAAA;AAAhB,KAArC;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBeD,mB;;KAAAA,mB;AA2BhB,OAAO,SAASc,eAAT,GAA2B;AAAA;;AAChC,QAAMC,OAAO,GAAGpB,UAAU,CAACI,mBAAD,CAA1B;AAEA,SAAOgB,OAAP;AACD;;IAJeD,e","sourcesContent":["import React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { api } from \"../../services/api\";\n\nexport interface TransactionItemProps {\n  id: number;\n  title: string;\n  type: string;\n  category: string;\n  amount: number;\n  createdAt: string;\n}\n\ninterface TransactionsProviderProps {\n  children: ReactNode;\n}\n\ninterface TransactionInput {\n  title: string;\n  type: string;\n  category: string;\n  amount: number;\n}\n\ninterface TransactionsContextProps {\n  transactions: TransactionItemProps[];\n  createTransaction: (trasaction: TransactionInput) => Promise<void>;\n}\n\nconst TransactionsContext = createContext<TransactionsContextProps>(\n  {} as TransactionsContextProps\n);\n\nexport function TransactionProvider({ children }: TransactionsProviderProps) {\n  const [transactions, setTransactions] = useState<TransactionItemProps[]>([]);\n\n  useEffect(() => {\n    api\n      .get(\"/transactions\")\n      .then(({ data }) => setTransactions(data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput: TransactionInput) {\n    const response = await api.post(\"/transactions\", {\n      ...transactionInput,\n      createdAt: new Date(),\n    });\n\n    const { transaction } = response.data;\n\n    setTransactions([...transactions, transaction]);\n  }\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\n      {children}\n    </TransactionsContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  const context = useContext(TransactionsContext);\n\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}