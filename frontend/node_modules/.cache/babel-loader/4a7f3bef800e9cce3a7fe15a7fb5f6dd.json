{"ast":null,"code":"var _jsxFileName = \"/home/cs/Projects/byefive/frontend/src/components/TransactionsTable/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container } from \"./styles\";\nimport { useTransactions } from \"../hooks/useTransactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsTable = () => {\n  _s();\n\n  const {\n    transactions\n  } = useTransactions();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xEDtulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: item.type,\n            children: [item.type === \"withdraw\" ? \"- \" : \"\", new Intl.NumberFormat(\"pt-BR\", {\n              style: \"currency\",\n              currency: \"BRL\"\n            }).format(item.amount)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Intl.DateTimeFormat(\"pt-BR\").format(new Date(item.createdAt))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsTable, \"KM2oTVMBjbrrMaP+IVSrht+dP2Y=\", false, function () {\n  return [useTransactions];\n});\n\n_c = TransactionsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsTable\");","map":{"version":3,"sources":["/home/cs/Projects/byefive/frontend/src/components/TransactionsTable/index.tsx"],"names":["React","Container","useTransactions","TransactionsTable","transactions","map","item","title","type","Intl","NumberFormat","style","currency","format","amount","category","DateTimeFormat","Date","createdAt","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAEEC,eAFF,QAGO,0BAHP;;AAKA,OAAO,MAAMC,iBAA2B,GAAG,MAAM;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAmBF,eAAe,EAAxC;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGE,YAAY,CAACC,GAAb,CAAkBC,IAAD,iBAChB;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAED,IAAI,CAACE,IAApB;AAAA,uBACGF,IAAI,CAACE,IAAL,KAAc,UAAd,GAA2B,IAA3B,GAAkC,EADrC,EAEG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC9BC,cAAAA,KAAK,EAAE,UADuB;AAE9BC,cAAAA,QAAQ,EAAE;AAFoB,aAA/B,EAGEC,MAHF,CAGSP,IAAI,CAACQ,MAHd,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AAAA,sBAAKR,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA,sBACG,IAAIN,IAAI,CAACO,cAAT,CAAwB,OAAxB,EAAiCH,MAAjC,CACC,IAAII,IAAJ,CAASX,IAAI,CAACY,SAAd,CADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA,WAASZ,IAAI,CAACa,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CArCM;;GAAMhB,iB;UACcD,e;;;KADdC,iB","sourcesContent":["import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nimport {\n  TransactionItemProps,\n  useTransactions,\n} from \"../hooks/useTransactions\";\n\nexport const TransactionsTable: React.FC = () => {\n  const { transactions } = useTransactions();\n\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>TÃ­tulo</th>\n            <th>Valor</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.map((item: TransactionItemProps) => (\n            <tr key={item.id}>\n              <td>{item.title}</td>\n              <td className={item.type}>\n                {item.type === \"withdraw\" ? \"- \" : \"\"}\n                {new Intl.NumberFormat(\"pt-BR\", {\n                  style: \"currency\",\n                  currency: \"BRL\",\n                }).format(item.amount)}\n              </td>\n              <td>{item.category}</td>\n              <td>\n                {new Intl.DateTimeFormat(\"pt-BR\").format(\n                  new Date(item.createdAt)\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}